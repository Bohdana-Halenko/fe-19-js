{"mappings":"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","sources":["src/js/card-six.js"],"sourcesContent":["const dino = document.querySelector('.dino');\nconst player = document.querySelector('.dino__player');\nconst cactus = document.querySelector('.dino__cactus');\nconst pointsEl = document.querySelector('.dino__points');\nconst overlayEl = document.querySelector('.dino__overlay');\nconst resultsEl = document.querySelector('.dino__results');\nconst butEl = document.querySelector('.dino__but');\n\nlet x = Math.floor(player.getBoundingClientRect().x + player.getBoundingClientRect().width / 2);\nlet y = Math.floor(player.getBoundingClientRect().y + player.getBoundingClientRect().width / 2);\n\nlet points = 0;\nlet timer1;\nlet timer2;\nlet timer3;\nlet isAnimating = false;\n\nconst resetGame = () => {\n    player.style.left = '100px';\n    player.style.bottom = '15px';\n    cactus.style.right = '-70px';\n    cactus.style.bottom = '15px';\n    points = 0;\n};\n\nconst cactusRun = () => {\n    cactus.style.right = `${Number(cactus.style.right.split('px')[0]) + 8 + points*0.05}px`;\n    x = Math.floor(cactus.getBoundingClientRect().x + cactus.getBoundingClientRect().width / 2);\n    y = Math.floor(cactus.getBoundingClientRect().y + cactus.getBoundingClientRect().width / 2);\n    if (x < 0) {\n        cactus.style.display = 'none';\n        cactus.style.right = `-70px`;\n        setTimeout(() => cactus.style.display = 'block', 200)\n    }\n};\n\nconst checkCollision = () => {\n    const playerRect = player.getBoundingClientRect();\n    const cactusRect = cactus.getBoundingClientRect();\n\n    const playerX = Math.floor(playerRect.x);\n    const playerY = Math.floor(playerRect.y);\n    const playerWidth = Math.floor(playerRect.width);\n    const playerHeight = Math.floor(playerRect.height);\n\n    const cactusX = Math.floor(cactusRect.x);\n    const cactusY = Math.floor(cactusRect.y);\n    const cactusWidth = Math.floor(cactusRect.width);\n    const cactusHeight = Math.floor(cactusRect.height);\n\n    if (\n        playerX < cactusX + cactusWidth &&\n        playerX + playerWidth > cactusX &&\n        playerY < cactusY + cactusHeight &&\n        playerY + playerHeight > cactusY\n    ) {\n        overlayEl.style.display = 'flex';\n        player.style.display = 'none';\n        pointsEl.style.display = 'none';\n        butEl.style.display = 'flex';\n        if (points >= localStorage.getItem('dinoRecord')) localStorage.setItem(\"dinoRecord\", points);\n        resultsEl.innerHTML = `\n            Game over\n            <br>\n            ${points} points\n            <br>\n            Record ${localStorage.getItem('dinoRecord')}\n        `\n        clearInterval(timer1);\n        clearInterval(timer2);\n        clearInterval(timer3);\n        resetGame();\n    }\n};\n\ndocument.addEventListener('keydown', (e) => {\n    if (e.key === 'n' && !isAnimating) {\n        isAnimating = true;\n        player.style.bottom = '100px';\n        setTimeout(() => player.style.bottom = '15px', 400);\n        setTimeout(() => isAnimating = false, 600)\n    }\n});\n\n\nbutEl.addEventListener('click', () => {\n    overlayEl.style.display = 'none';\n    player.style.display = 'block';\n    pointsEl.style.display = 'block';\n    timer1 = setInterval(cactusRun, 30);\n    timer2 = setInterval(checkCollision, 100);\n    timer3 = setInterval(() => {\n        points += 1;\n        pointsEl.innerHTML = `${points} points`;\n    }, 50);\n});\n\nconst startGame = (e) => {\n    if (e.key === 'g') {\n        overlayEl.style.display = 'none';\n        overlayEl.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';\n        timer1 = setInterval(cactusRun, 30);\n        timer2 = setInterval(checkCollision, 100);\n        timer3 = setInterval(() => {\n            points += 1;\n            pointsEl.innerHTML = `${points} points`;\n        }, 50);\n        \n        document.removeEventListener('keydown', startGame);\n    }\n};\n\ndocument.addEventListener('keydown', startGame);\n\nresultsEl.innerHTML = `\n    Press 'g' to start the game\n    <br>\n    Press 'n' to jump\n    <br>\n    Record ${localStorage.getItem('dinoRecord') === null ? 0 : localStorage.getItem('dinoRecord')}\n`\n"],"names":["document","querySelector","$135cff170f47c3cb$var$player","$135cff170f47c3cb$var$cactus","$135cff170f47c3cb$var$pointsEl","$135cff170f47c3cb$var$overlayEl","$135cff170f47c3cb$var$resultsEl","$135cff170f47c3cb$var$butEl","$135cff170f47c3cb$var$timer1","$135cff170f47c3cb$var$timer2","$135cff170f47c3cb$var$timer3","$135cff170f47c3cb$var$x","Math","floor","getBoundingClientRect","x","width","$135cff170f47c3cb$var$y","y","$135cff170f47c3cb$var$points","$135cff170f47c3cb$var$isAnimating","$135cff170f47c3cb$var$cactusRun","style","right","Number","split","display","setTimeout","$135cff170f47c3cb$var$checkCollision","playerRect","cactusRect","playerX","playerY","playerWidth","playerHeight","height","cactusX","cactusY","cactusWidth","cactusHeight","localStorage","getItem","setItem","innerHTML","clearInterval","left","bottom","addEventListener","e","key","setInterval","$135cff170f47c3cb$var$startGame","backgroundColor","removeEventListener"],"version":3,"file":"index.e5a77376.js.map"}