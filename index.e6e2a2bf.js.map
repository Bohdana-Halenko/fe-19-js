{"mappings":"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","sources":["src/js/card-six.js"],"sourcesContent":["const dino = document.qwerySelector('.dino');\nconst player = document.qwerySelector('.dino__player');\nconst cactus = document.qwerySelector('.dino__cactus');\nconst pointsEl = document.qwerySelector('.dino__points');\nconst overlayEl = document.qwerySelector('.dino__overlay');\nconst resultsEl = document.qwerySelector('.dino__results');\nconst butEl = document.qwerySelector('.dino__but');\n\nlet x = Math.floor(player.getBoundingClient().x + player.getBoundingClientRect().width / 2)\nlet y = Math.floor(player.getBoundingClient().y + player.getBoundingClientRect().width / 2)\n\nlet points = 0;\nlet IsAnimating = false;\nlet timer1;\nlet timer2;\nlet timer3;\n\nconst resetGame = () => {\n  player.style.left = '100px';\n  player.style.bottom = '15px';\n  cactus.style.right = '-70px';\n  cactus.style.bottom = '15px';\n  points = 0;\n}\n\nconst cactusRun = () => {\n  cactus.style.right = `${Number(cactus.style.right.split('px')[0]) + 8 + points * 0.05}px`;\n   x = Math.floor(cactus.getBoundingClient().x + cactus.getBoundingClientRect().width / 2)\n   y = Math.floor(cactus.getBoundingClient().y + cactus.getBoundingClientRect().width / 2)\n   if (x < 0) {\n    cactus.style.display = 'none';\n    cactus.style.right = '-70px';\n    setTimeout(() => cactus.style.display = 'block', 200);\n   }\n}\n\nconst checkCollision = () => {\n  const playerRect = player.getBoundingClientRect();\n  const cactusRect = cactus.getBoundingClientRect();\n\n  const playerX = Math.floor(playerRect.x);\n  const playerY = Math.floor(playerRect.y);\n  const playerWidth = Math.floor(playerRect.width);\n  const playerHeighth = Math.floor(playerRect.height);\n\n  const cactusX = Math.floor(cactusRect.x);\n  const cactusY = Math.floor(cactusRect.y);\n  const cactusWidth = Math.floor(cactusRect.width);\n  const cactusHeighth = Math.floor(cactusRect.height);\n\n  if(playerX < cactusX + cactusWidth &&\n     playerX + playerWidth > cactus &&\n     playerY < cactusY + cactusHeighth &&\n     playerY + playerHeighth > cactusY \n    ) {\n      overlayEl.style.display = 'flex';\n      player.style.display = 'none';\n      pointsEl.style.display = 'none';\n      butEl.style.display = 'flex';\n\n      if(points >= localStorage.getItem('dinoRecord')) localStorage.setItem('DinoRecord', points)\n      resultsEl.innerHTML = `\n      Game over\n      <br>\n      ${points} points\n      <br>\n      Record ${localStorage.getItem('dinoRecord')}`;\n\n      clearInterval(timer1);\n      clearInterval(timer2);\n      clearInterval(timer3);\n      resetGame();\n\n    }\n};\n\ndocument.addEventListener('keydown', (e) => {\n  if(e.key === 'n' && !IsAnimating) {\n    IsAnimating = true;\n    player.style.bottom = '100px'\n    setTimeout(() => player.style.bottom = '15px', 400)\n    setTimeout(() => IsAnimating = false, 600);\n  }\n});\n\nbutEl.addEventListener('click',() => {\n  overlayEl.style.display = 'none';\n  player.style.display = 'block';\n  pointsEl.style.display ='block';\n  timer1 = setInterval(cactusRun, 30);\n  timer2 = setInterval(checkCollision, 100)\n  timer3 = setInterval(() => {\n    points += 1;\n    pointsEl.innerHTML = `${points} points`;\n  }, 50)\n});\n\nconst startGame = (e) => {\n  if(e.key === 'g') {\n    overlayEl.style.display = 'none';\n    overlayEl.style.backgroundColor = 'rgha(0, 0, 0, 0.7)';\n    timer1 = setInterval(cactusRun, 30);\n    timer2 = setInterval(checkCollision, 100)\n    timer3 = setInterval(() => {\n      points += 1;\n      pointsEl.innerHTML = `${points} points`;\n    }, 50)\n\n    document.removeEventListener('keydown',startGame)\n  }\n};\n\ndocument.addEventListener('keydown',startGame);\n\nresultsEl = `Press 'g' to start game \n<br>\nPress 'n' to jump\n<br>\nRecord ${localStorage.getItem('dinoRecord') === null ? 0 : localStorage.getItem('dinoRecord')}`;\n"],"names":["document","qwerySelector","$1a0e2f21f9604c4c$var$timer1","$1a0e2f21f9604c4c$var$timer2","$1a0e2f21f9604c4c$var$timer3","$1a0e2f21f9604c4c$var$player","$1a0e2f21f9604c4c$var$cactus","$1a0e2f21f9604c4c$var$pointsEl","$1a0e2f21f9604c4c$var$overlayEl","$1a0e2f21f9604c4c$var$resultsEl","$1a0e2f21f9604c4c$var$butEl","$1a0e2f21f9604c4c$var$x","Math","floor","getBoundingClient","x","getBoundingClientRect","width","$1a0e2f21f9604c4c$var$points","y","$1a0e2f21f9604c4c$var$IsAnimating","$1a0e2f21f9604c4c$var$cactusRun","style","right","concat","Number","split","display","setTimeout","$1a0e2f21f9604c4c$var$checkCollision","playerRect","cactusRect","playerX","playerY","playerWidth","playerHeighth","height","cactusX","cactusY","cactusWidth","cactusHeighth","localStorage","getItem","setItem","innerHTML","clearInterval","left","bottom","addEventListener","e","key","setInterval","$1a0e2f21f9604c4c$var$startGame","backgroundColor","removeEventListener"],"version":3,"file":"index.e6e2a2bf.js.map"}